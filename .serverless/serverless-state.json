{
  "service": {
    "service": "alfred",
    "serviceObject": {
      "name": "alfred"
    },
    "provider": {
      "stage": "dev",
      "region": "eu-west-1",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*]+?)}",
      "name": "aws",
      "runtime": "python3.6",
      "profile": "default",
      "versionFunctions": false,
      "environment": {
        "S3_BUCKET": "alfred-dev-data",
        "MAILER_URL": "https://us-central1-mailer-69581.cloudfunctions.net/mail/"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "s3:PutObject",
            "s3:GetObject"
          ],
          "Resource": [
            "arn:aws:s3:::alfred-dev-data/*"
          ]
        }
      ],
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "YtsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/alfred-dev-yts"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "alfred",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/alfred-dev-yts:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/alfred-dev-yts:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "alfred",
                    "dev",
                    "eu-west-1",
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "YtsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/alfred/dev/1554913155581-2019-04-10T16:19:15.581Z/yts-alfred-dev-yts.zip"
              },
              "FunctionName": "alfred-dev-yts",
              "Handler": "index.main",
              "MemorySize": 128,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "python3.6",
              "Timeout": 60,
              "Description": "Check yts for new movies",
              "Environment": {
                "Variables": {
                  "S3_BUCKET": "alfred-dev-data",
                  "MAILER_URL": "https://us-central1-mailer-69581.cloudfunctions.net/mail/"
                }
              }
            },
            "DependsOn": [
              "YtsLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "YtsEventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(0 12 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "YtsLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "ytsSchedule"
                }
              ]
            }
          },
          "YtsLambdaPermissionEventsRuleSchedule1": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "YtsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "events.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::GetAtt": [
                  "YtsEventsRuleSchedule1",
                  "Arn"
                ]
              }
            }
          },
          "S3TranscriptionBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "alfred-dev-data"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-python-requirements",
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "yts": {
        "handler": "index.main",
        "module": "functions/yts",
        "description": "Check yts for new movies",
        "memorySize": 128,
        "events": [
          {
            "schedule": "cron(0 12 * * ? *)"
          }
        ],
        "timeout": 60,
        "name": "alfred-dev-yts",
        "package": {
          "artifact": ".serverless/functions/yts-alfred-dev-yts.zip"
        },
        "memory": 128,
        "runtime": "python3.6",
        "vpc": {}
      }
    },
    "resources": {
      "Resources": {
        "S3TranscriptionBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "alfred-dev-data"
          }
        }
      },
      "Outputs": {}
    },
    "layers": {}
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/alfred/dev/1554913155581-2019-04-10T16:19:15.581Z",
    "artifact": ""
  }
}